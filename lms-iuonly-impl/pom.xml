<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>lms-iuonly-parent</artifactId>
        <groupId>edu.iu.uits.lms</groupId>
        <version>4.0.22-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>lms-iuonly-impl</artifactId>
    <packaging>jar</packaging>

    <properties>
        <docker_repository_name>iuonly</docker_repository_name>
        <helm_files_directory>/..</helm_files_directory>
        <helm_service_name>lms-iuonly-impl</helm_service_name>
        <jjwt-api.version>0.11.2</jjwt-api.version>
        <denodo-jdbc.version>8.0.2</denodo-jdbc.version>
        <denodo-hibernate-dialect.version>8.0.20201021</denodo-hibernate-dialect.version>
        <lms-email-client.version>4.0.13</lms-email-client.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>edu.iu.uits.lms</groupId>
            <artifactId>lms-email-client</artifactId>
            <version>${lms-email-client.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-vault-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security.oauth.boot</groupId>
            <artifactId>spring-security-oauth2-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>
         <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.4</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ehcache</groupId>
            <artifactId>ehcache</artifactId>
        </dependency>
        <dependency>
            <groupId>edu.iu.uits.lms</groupId>
            <artifactId>common-configuration</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>${jjwt-api.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.denodo.vdp.jdbc</groupId>
            <artifactId>denodo-jdbc</artifactId>
            <version>${denodo-jdbc.version}</version>
        </dependency>
        <dependency>
            <groupId>com.denodo.vdp.jdbc</groupId>
            <artifactId>denodo-hibernate-dialect</artifactId>
            <version>${denodo-hibernate-dialect.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>lms-iuonly-impl</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.kongchen</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <configuration>
                    <apiSources>
                        <apiSource>
                            <springmvc>true</springmvc>
                            <schemes>http,https</schemes>
                            <host>lms-iuonly-impl:8080</host>
                            <basePath>/</basePath>
                            <locations>
                                <location>lms.iuonly</location>
                            </locations>
                            <info>
                                <title>iuonly api</title>
                                <version>${project.version}</version>
                            </info>
                            <outputFormats>json</outputFormats>
                            <swaggerDirectory>${project.build.directory}/swagger-ui</swaggerDirectory>
                            <attachSwaggerArtifact>true</attachSwaggerArtifact>
                        </apiSource>
                    </apiSources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <configuration>
                    <repository>localhost:5000/${docker_repository_name}</repository>
                </configuration>
                <executions>
                    <execution>
                        <id>tag-latest-local</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>tag</goal>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <tag>latest</tag>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>de.jpdigital</groupId>
                <artifactId>hibernate54-ddl-maven-plugin</artifactId>
                <configuration>
                    <dialects>
                        <param>h2</param>
                        <param>postgresql9</param>
                    </dialects>
                    <packages>
                        <param>lms.iuonly</param>
                    </packages>
                    <!--                    <persistenceXml>src/main/webapp/META-INF/canvasnotifier-persistence.xml</persistenceXml>-->
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker-push</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <configuration>
                            <repository>${docker_repository_base}${docker_repository_name}</repository>
                        </configuration>
                        <executions>
                            <execution>
                                <id>push-latest</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>tag</goal>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <tag>latest</tag>
                                </configuration>
                            </execution>
                            <execution>
                                <id>push-version</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>tag</goal>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <tag>${project.version}</tag>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>helm-deploy</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>